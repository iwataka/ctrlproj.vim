*ctrlproj.txt*    provides quick access to any references
*ctrlproj* *CtrlProj* *Ctrlproj*
===============================================================================
        _________   __         .__                          __  ~
        \_   ___ \_/  |________|  | _____________  ____    |__| ~
        /    \  \/\   __\_  __ \  | \____ \_  __ \/  _ \   |  | ~
        \     \____|  |  |  | \/  |_|  |_> >  | \(  <_> )  |  | ~
         \______  /|__|  |__|  |____/   __/|__|   \____/\__|  | ~
                \/                  |__|               \______| ~
===============================================================================
CONTENTS                                            *ctrlproj-contents*

    1. Intro.................................|ctrlproj-intro|
    2. Usage.................................|ctrlproj-usage|
    2. Options...............................|ctrlproj-options|
    3. Commands..............................|ctrlproj-commands|
    4. Mappings..............................|ctrlproj-mappings|
    5. License...............................|ctrlproj-license|

===============================================================================
INTRO                                                  *ctrlproj-intro*

Ctrlproj is an abbreviation of "CtrlP + Project" and provides great project
management features powered by CtrlP. This is based on my first Vim's plug-in
ctrlp-quickref.vim(https://github.com/iwataka/ctrlp-quickref.vim) and shipped
with a lot of additional features. Though this is an early-stage experimental
project, this aims to import the features of the awesome pair of Emacs's
Projectile(https://github.com/bbatsov/projectile) and
Helm(https://github.com/emacs-helm/helm) by utilizing
CtrlP(https://github.com/ctrlpvim/ctrlp.vim).

At present, this project includes these features:

+ switch between projects
+ toggle between files with same names but different extensions
+ toggle between code and its test (experimental)
+ kill all buffers in working project
+ open files in any other projects

Of course Ctrlproj is fully integrated with CtrlP's features.

===============================================================================
USAGE                                                  *ctrlproj-usage*

After installing this plug-in, you should register some paths to your projects,
libraries or application sources in ~/.vim/.ctrlproj file (recommended) or
g:ctrlproj_paths variable. If you prefer the former, you should create .ctrlproj
file in ~/.vim and write like below:

    # Write
    # Some
    # Comments
    /path/to/specified/project

    # Additional comment
    /path/to/specified/directory/*

    # You can also exclude specified directory by writing like this
    ! /path/to/project/you/want/to/exclude

If you prefer the latter, write in your .vimrc like this:

    let g:ctrlp_quickref_paths = [
        \ '/path/to/specified/project',
        \ '/path/to/specified/directory/*',
        " You want to exclude specified directory, put '!' at the head.
        \ '! /path/to/project/you/want/to/exclude'
    ]

That's all!
Run the command :Ctrlproj and you get CtrlP interface with paths you registered
before.
You can select specified path by pressing these keys:

+ <enter> to get CtrlP interface again in the selected project. You can select
files by default CtrlP's key-binds in it, but they are opened by open-command
if you select ones which have the extensions like pdf, html or something like
that.

+ <c-t> to delete all buffers in the current project and move the current
directory to the selected project.

+ <c-v> to move the current directory to the selected project without
removing buffers

+ <c-x> to open the default file-explorer in the selected project.

===============================================================================
OPTIONS                                              *ctrlproj-options*

Overview:~

|ctrlproj_readonly_enabled|......Open files with readonly flag.
|ctrlproj_open_extensions|.......Indicates which file is opened out of
Vim.
|ctrlproj_configuration_file|.....The path which indicates the
configuration file
|ctrlproj_paths|..................The candidates of this plug-in.

-------------------------------------------------------------------------------
Detailed descriptions and default values:~

                                         *'g:ctrlproj_readonly_enabled'*
Set this to 0 to open files without readonly flag.
    let g:ctrlproj_readonly_enabled = 1

                                         *'g:ctrlproj_open_extensions'*
If you open files which have extensions contained in this list, they are
opened in specified browser or PDF viewer or else.
    let g:ctrlproj_open_extensions = ['html', 'pdf']

                                         *'g:ctrlproj_configuration_file'*
This is the path which indicates the configuration file.
    let g:ctrlproj_configuration_file = '~/.vim/.ctrlproj'

                                         *'g:ctrlproj_paths'*
This list contains paths which are the candidates of this plug-in.
    let g:ctrlproj_paths = []

                                         *'g:ctrlproj_src2test'*
This list contains pairs of source and test patterns. By default this supports
Java and Scala.
    let g:ctrlproj_src2test = {
        \ 'src/main/java/*.java': 'src/test/java/*Test.java',
        \ 'src/main/scala/*.scala': 'src/test/scala/*Test.scala'
        \ }


===============================================================================
COMMANDS                                            *ctrlproj-commands*

                                                         *:Ctrlproj*
:Ctrlproj
    Open CtrlP interface with specified paths.

                                                         *:CtrlprojLastDir*
:CtrlprojLastDir
    Open CtrlP interface in last selected directory.

                                                         *:CtrlprojEdit*
:CtrlprojEdit
    Open the configuration file (~/.vim/.ctrlproj by default).

                                                         *:CtrlprojAlternate*
:CtrlprojAlternate
    Toggle current buffer to the files which have same names but different
    extensions.

                                                         *:CtrlprojSwitch*
:CtrlprojSwitch
    Toggle current focused code to its test or vice versa. First this command
    try to switch the current buffer by using g:ctrlproj_srctest variable. If
    it fails, applies built-in function which switch between code and its
    test.

                                                         *:CtrlprojRemoveBuffers*
:CtrlprojRemoveBuffers
    Remove all buffers included in the current project.

The last three commands utilizes the files which are cached by CtrlP.

===============================================================================
MAPPINGS                                            *ctrlproj-mappings*

This plug-in defines no mappings. If you want to know mappings in CtrlP
interface, read CtrlP help.

===============================================================================
LICENSE                                            *ctrlproj-license*

Copyright(c) 2015 Takatoshi Iwasa
Released under the MIT license
http://opensource.org/licenses/mit-license.php

===============================================================================
vim:ft=help
